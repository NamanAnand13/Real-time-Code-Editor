{"ast":null,"code":"var _jsxFileName = \"/Users/namananand/Desktop/Real-time-Code-Editor/src/components/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = socketRef => {\n  _s();\n  const editorRef = useRef(null);\n  const roomId = useParams();\n  // console.log(roomId);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById('realTimeEditor'), {\n        mode: {\n          name: 'javascript',\n          json: true\n        },\n        theme: 'dracula',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      editorRef.current.on('change', (instance, changes) => {\n        // console.log('instance', instance);\n        // console.log('changes', changes);\n        const origin = changes.origin;\n        const code = instance.getValue();\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n      socketRef.current.on(ACTIONS.CODE_CHANGE, code => {\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realTimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"uo2iOBgsyp7bJdgWAzVr6BgG76E=\", false, function () {\n  return [useParams];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","useParams","jsxDEV","_jsxDEV","Editor","socketRef","_s","editorRef","roomId","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","setValue","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/namananand/Desktop/Real-time-Code-Editor/src/components/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { useParams } from 'react-router-dom';\n\nconst Editor = (socketRef) => {\n    const editorRef = useRef(null);\n    const roomId = useParams();\n    // console.log(roomId);\n    useEffect(() => {\n        async function init() {\n            editorRef.current = Codemirror.fromTextArea(document.getElementById('realTimeEditor'), {\n                mode: { name: 'javascript', json: true },\n                theme: 'dracula',\n                autoCloseTags: true,\n                autoCloseBrackets: true,\n                lineNumbers: true,\n            })\n\n            editorRef.current.on('change', (instance, changes) => {\n                // console.log('instance', instance);\n                // console.log('changes', changes);\n                const origin = changes.origin;\n                const code = instance.getValue();\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomId,\n                        code,\n                    })\n                }\n            })\n            \n            socketRef.current.on(ACTIONS.CODE_CHANGE, (code) => {\n                if (code !== null) {\n                    editorRef.current.setValue(code);\n                }\n            });\n        }\n        init();\n    }, []);\n    return <textarea id='realTimeEditor'></textarea>;\n\n}\n\nexport default Editor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AACtC,OAAO,uCAAuC;AAC9C,OAAO,8BAA8B;AACrC,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMU,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B;EACAJ,SAAS,CAAC,MAAM;IACZ,eAAeY,IAAIA,CAAA,EAAG;MAClBF,SAAS,CAACG,OAAO,GAAGX,UAAU,CAACY,YAAY,CAACC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,EAAE;QACnFC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAY;UAAEC,IAAI,EAAE;QAAK,CAAC;QACxCC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,IAAI;QACvBC,WAAW,EAAE;MACjB,CAAC,CAAC;MAEFb,SAAS,CAACG,OAAO,CAACW,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,OAAO,KAAK;QAClD;QACA;QACA,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM;QAC7B,MAAMC,IAAI,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC;QAChC,IAAIF,MAAM,KAAK,UAAU,EAAE;UACvBnB,SAAS,CAACK,OAAO,CAACiB,IAAI,CAAC3B,OAAO,CAAC4B,WAAW,EAAE;YACxCpB,MAAM;YACNiB;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;MAEFpB,SAAS,CAACK,OAAO,CAACW,EAAE,CAACrB,OAAO,CAAC4B,WAAW,EAAGH,IAAI,IAAK;QAChD,IAAIA,IAAI,KAAK,IAAI,EAAE;UACflB,SAAS,CAACG,OAAO,CAACmB,QAAQ,CAACJ,IAAI,CAAC;QACpC;MACJ,CAAC,CAAC;IACN;IACAhB,IAAI,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBAAON,OAAA;IAAU2B,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AAEpD,CAAC;AAAA5B,EAAA,CArCKF,MAAM;EAAA,QAEOH,SAAS;AAAA;AAAAkC,EAAA,GAFtB/B,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}