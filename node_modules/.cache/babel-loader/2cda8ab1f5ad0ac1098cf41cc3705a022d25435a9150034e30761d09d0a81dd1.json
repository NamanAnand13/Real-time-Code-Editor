{"ast":null,"code":"var _jsxFileName = \"/Users/namananand/Desktop/Real-time-Code-Editor/src/pages/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Client from '../components/Client';\nimport Editor from '../components/editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../Actions';\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = () => {\n  _s();\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const reactNavigator = useNavigate();\n  const {\n    roomId\n  } = useParams(); // gets the roomId from the url / session\n  const [clients, setClients] = useState([]);\n  async function copyRoomId() {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(\"RoomId copied on clipboard successfully\");\n    } catch {}\n  }\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleError(err));\n      socketRef.current.on('connect_failed', err => handleError(err));\n      function handleError(err) {\n        console.log(err);\n        toast.error('Socket conenction failed, try again later');\n        reactNavigator('/');\n      }\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n\n      //Listening for new connections\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _location$state2;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room`);\n        }\n        console.log(`${username} joined`);\n        setClients(clients);\n      });\n\n      //Listening for disconnection\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n      socketRef.current.disconnect();\n    };\n  }, []);\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/CoDeC.png\",\n            alt: \"codec-logo\",\n            className: \"logoEditor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        onClick: copyRoomId,\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn LeaveBtn\",\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(EditorPage, \"zG5knFIz1L0M5DvCNHvTrPCWOos=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initSocket","ACTIONS","Navigate","useLocation","useNavigate","useParams","toast","jsxDEV","_jsxDEV","EditorPage","_s","socketRef","location","reactNavigator","roomId","clients","setClients","copyRoomId","navigator","clipboard","writeText","success","init","_location$state","current","on","err","handleError","console","log","error","emit","JOIN","username","state","JOINED","socketId","_location$state2","DISCONNECTED","prev","filter","client","off","disconnect","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","map","onClick","_c","$RefreshReg$"],"sources":["/Users/namananand/Desktop/Real-time-Code-Editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Client from '../components/Client';\nimport Editor from '../components/editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../Actions';\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const location = useLocation();\n    const reactNavigator = useNavigate();\n    const { roomId } = useParams(); // gets the roomId from the url / session\n    const [clients, setClients] = useState([]);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success(\"RoomId copied on clipboard successfully\")\n        }\n        catch {\n\n        }\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleError(err));\n            socketRef.current.on('connect_failed', (err) => handleError(err));\n\n            function handleError(err) {\n                console.log(err);\n                toast.error('Socket conenction failed, try again later');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            //Listening for new connections\n            socketRef.current.on(ACTIONS.JOINED, ({ clients, username, socketId }) => {\n                if (username !== location.state?.username) {\n                    toast.success(`${username} joined the room`);\n                }\n                console.log(`${username} joined`);\n                setClients(clients);\n            });\n\n            //Listening for disconnection\n            socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\n                toast.success(`${username} left the room`);\n                setClients((prev) => {\n                    return prev.filter((client) => client.socketId !== socketId);\n                });\n            });\n        }\n        init();\n\n        return () => {\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n            socketRef.current.disconnect();\n        }\n    }, []);\n\n    if (!location.state) {\n        return <Navigate to='/'></Navigate>\n    }\n\n    return (\n        <div className='mainWrap'>\n            <div className='aside'>\n                <div className='asideInner'>\n                    <div className='logo'>\n                        <img src='/CoDeC.png' alt='codec-logo' className='logoEditor'></img>\n                    </div>\n                    <h3>Connected</h3>\n                    <div className='userList'>\n                        {\n                            clients.map((client) => (\n                                <Client username={client.username} key={client.socketId} />\n                            ))\n                        }\n                    </div>\n                </div>\n                <button className='btn copyBtn' onClick={copyRoomId}>Copy ROOM ID</button>\n                <button className='btn LeaveBtn'>Leave</button>\n            </div>\n            <div className='editorWrap'>\n                <Editor socketRef={socketRef} roomId={roomId} />\n            </div>\n        </div>\n    )\n}\n\nexport default EditorPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}