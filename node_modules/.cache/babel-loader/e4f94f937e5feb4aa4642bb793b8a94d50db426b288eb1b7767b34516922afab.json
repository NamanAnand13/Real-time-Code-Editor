{"ast":null,"code":"var _jsxFileName = \"/Users/namananand/Desktop/Naman/Projects/Real-time-Code-Editor/src/pages/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Client from '../components/Client';\nimport Editor from '../components/editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../Actions';\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = () => {\n  _s();\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const reactNavigator = useNavigate();\n  const codeRef = useRef(null);\n  const {\n    roomId\n  } = useParams(); // gets the roomId from the url / session\n  const [clients, setClients] = useState([]);\n  async function copyRoomId() {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(\"RoomId copied on clipboard successfully\");\n    } catch (err) {\n      toast.error(\"Error copying RoomId\");\n      console.error(err);\n    }\n  }\n  function leaveRoom() {\n    reactNavigator('/');\n  }\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleError(err));\n      socketRef.current.on('connect_failed', err => handleError(err));\n      function handleError(err) {\n        console.log(err);\n        toast.error('Socket conenction failed, try again later');\n        reactNavigator('/');\n      }\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n\n      //Listening for new connections\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _location$state2;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room`);\n        }\n        console.log(`${username} joined`);\n        setClients(clients);\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      });\n\n      //Listening for disconnection\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n      socketRef.current.disconnect();\n    };\n  }, []);\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/CoDeC.png\",\n            alt: \"codec-logo\",\n            className: \"logoEditor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        onClick: copyRoomId,\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn LeaveBtn\",\n        onClick: leaveRoom,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(EditorPage, \"512I4rWgj7/os2+9tGGAgyUot9k=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initSocket","ACTIONS","Navigate","useLocation","useNavigate","useParams","toast","jsxDEV","_jsxDEV","EditorPage","_s","socketRef","location","reactNavigator","codeRef","roomId","clients","setClients","copyRoomId","navigator","clipboard","writeText","success","err","error","console","leaveRoom","init","_location$state","current","on","handleError","log","emit","JOIN","username","state","JOINED","socketId","_location$state2","SYNC_CODE","code","DISCONNECTED","prev","filter","client","off","disconnect","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","map","onClick","onCodeChange","_c","$RefreshReg$"],"sources":["/Users/namananand/Desktop/Naman/Projects/Real-time-Code-Editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Client from '../components/Client';\nimport Editor from '../components/editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../Actions';\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const location = useLocation();\n    const reactNavigator = useNavigate();\n    const codeRef = useRef(null);\n    const { roomId } = useParams(); // gets the roomId from the url / session\n    const [clients, setClients] = useState([]);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success(\"RoomId copied on clipboard successfully\");\n        }\n        catch (err) {\n            toast.error(\"Error copying RoomId\");\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleError(err));\n            socketRef.current.on('connect_failed', (err) => handleError(err));\n\n            function handleError(err) {\n                console.log(err);\n                toast.error('Socket conenction failed, try again later');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            //Listening for new connections\n            socketRef.current.on(ACTIONS.JOINED, ({ clients, username, socketId }) => {\n                if (username !== location.state?.username) {\n                    toast.success(`${username} joined the room`);\n                }\n                console.log(`${username} joined`);\n                setClients(clients);\n                socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                    code : codeRef.current,\n                    socketId\n                });\n            });\n\n            //Listening for disconnection\n            socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\n                toast.success(`${username} left the room`);\n                setClients((prev) => {\n                    return prev.filter((client) => client.socketId !== socketId);\n                });\n            });\n        }\n        init();\n\n        return () => {\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n            socketRef.current.disconnect();\n        }\n    }, []);\n\n    if (!location.state) {\n        return <Navigate to='/'></Navigate>\n    }\n\n    return (\n        <div className='mainWrap'>\n            <div className='aside'>\n                <div className='asideInner'>\n                    <div className='logo'>\n                        <img src='/CoDeC.png' alt='codec-logo' className='logoEditor'></img>\n                    </div>\n                    <h3>Connected</h3>\n                    <div className='userList'>\n                        {\n                            clients.map((client) => (\n                                <Client username={client.username} key={client.socketId} />\n                            ))\n                        }\n                    </div>\n                </div>\n                <button className='btn copyBtn' onClick={copyRoomId}>Copy ROOM ID</button>\n                <button className='btn LeaveBtn' onClick={leaveRoom}>Leave</button>\n            </div>\n            <div className='editorWrap'>\n                <Editor socketRef={socketRef} roomId={roomId} onCodeChange={(code) => { codeRef.current = code }} />\n            </div>\n        </div>\n    )\n}\n\nexport default EditorPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}